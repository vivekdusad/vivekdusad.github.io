"use strict";(self.webpackChunkvivekkhandelwal=self.webpackChunkvivekkhandelwal||[]).push([[9518],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),g=a,f=d["".concat(l,".").concat(g)]||d[g]||p[g]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4044:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},assets:function(){return u},toc:function(){return p},default:function(){return g}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={slug:"cache-response-in-flutter",title:"Cache Your Response The Right Way in Flutter",authors:["vivekdusad"],tags:["flutter","cache","flutter-tutorials"]},l=void 0,c={permalink:"/blog/cache-response-in-flutter",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/blog/blog/2021-08-01-mdx-blog-post/2021-08-01-mdx-blog-post.mdx",source:"@site/blog/2021-08-01-mdx-blog-post/2021-08-01-mdx-blog-post.mdx",title:"Cache Your Response The Right Way in Flutter",description:"banner",date:"2021-08-01T00:00:00.000Z",formattedDate:"August 1, 2021",tags:[{label:"flutter",permalink:"/blog/tags/flutter"},{label:"cache",permalink:"/blog/tags/cache"},{label:"flutter-tutorials",permalink:"/blog/tags/flutter-tutorials"}],readingTime:1.485,truncated:!1,authors:[{name:"Vivek Khandelwal",title:"Flutter Developer",url:"https://dusadvivek.me",imageURL:"https://github.com/vivekdusad.png",key:"vivekdusad"}],prevItem:{title:"Welcome",permalink:"/blog/welcome"},nextItem:{title:"Long Blog Post",permalink:"/blog/long-blog-post"}},u={authorsImageUrls:[void 0]},p=[{value:"Etag",id:"etag",children:[],level:2},{value:"Procedure-&gt;",id:"procedure-",children:[],level:2}],d={toc:p};function g(e){var t=e.components,s=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"banner",src:n(8106).Z})),(0,o.kt)("p",null,"Caching of GET Requests which are less-freqently modified has been\na best pratice for user expirence, this leads to less consumption\nof network bandwidth and leads to great user expirence."),(0,o.kt)("p",null,"For Achieving this we are going to use basic concept of Http protocol ",(0,o.kt)("strong",{parentName:"p"},"Etag"),"."),(0,o.kt)("h2",{id:"etag"},"Etag"),(0,o.kt)("p",null,"An ETag (entity tag) is an HTTP response header returned by an HTTP/1.1 compliant web server used to determine change in content at a given URL."),(0,o.kt)("p",null,"We can use Etag for caching purpose"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart",metastring:'title="main.dart"',title:'"main.dart"'},'Future<Response> fetch(String etag) async {\n    Response response = await _dio.get(Urls.appBannersEndpoint,\n        options: Options(headers: {"If-None-Match": etag}));\n    return response;\n  }\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"fetch")," function will throw error with status code 304 if data is not modified in database or give response if data is modified with status code ",(0,o.kt)("strong",{parentName:"p"},"200")),(0,o.kt)("h2",{id:"procedure-"},"Procedure->"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Make First Request to server"),(0,o.kt)("li",{parentName:"ol"},"Store Etag and Response to Local Database"),(0,o.kt)("li",{parentName:"ol"},"Further Requests will be made through stored etag(demonstrated above in code)"),(0,o.kt)("li",{parentName:"ol"},"If data is not modified then Exception will be thrown with status code 304 then we give data to ui layer from local database"),(0,o.kt)("li",{parentName:"ol"},"If Requests ends with status code 200 then we will give this new data to ui layer.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart",metastring:'title="repositry.dart"',title:'"repositry.dart"'},'Stream<List<Banners>> fetch() async* {\n    var data;\n    CacherDto? cachedData;\n    //getting etag from local database\n    try {\n      cachedData = await responseCacher.readData(Urls.appBannersEndpoint);\n    } catch (e) {\n      print(e);\n      cachedData = null;\n    }\n    try {\n        //making requests to server\n      Response response = (await service.fetch(cachedData?.etag ?? ""));\n      await responseCacher.saveData(\n          CacherDto(response.headers[\'etag\']![0], response.data),\n          Urls.appBannersEndpoint);\n      data = response.data;\n    } on DioError catch (_) {\n        //if error occured then data will be set from \n        //local database\n      data = cachedData?.data;\n    } catch (e) {\n      //! Add To Firebase\n      throw "Failed! Try Again Later";\n    }\n    if (data != null) {\n      yield (data as List).map((e) => Banners.fromJson(e)).toList();\n    }\n  }\n')))}g.isMDXComponent=!0},8106:function(e,t,n){t.Z=n.p+"assets/images/banner-77e0a776e9fd31f924c81659c3562db9.jpg"}}]);